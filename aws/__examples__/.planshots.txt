

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
+ create
~ update in-place

Terraform will perform the following actions:

+ module.ec2.aws_instance.mod[0]
id:                                          <computed>
ami:                                         "ami-55ef662f"
associate_public_ip_address:                 "true"
availability_zone:                           <computed>
ebs_block_device.#:                          <computed>
ebs_optimized:                               "false"
ephemeral_block_device.#:                    <computed>
instance_state:                              <computed>
instance_type:                               "t2.small"
ipv6_address_count:                          <computed>
ipv6_addresses.#:                            <computed>
key_name:                                    "ec2-key"
network_interface.#:                         <computed>
network_interface_id:                        <computed>
placement_group:                             <computed>
primary_network_interface_id:                <computed>
private_dns:                                 <computed>
private_ip:                                  <computed>
public_dns:                                  <computed>
public_ip:                                   <computed>
root_block_device.#:                         "1"
root_block_device.0.delete_on_termination:   "true"
root_block_device.0.volume_size:             "8"
root_block_device.0.volume_type:             "gp2"
security_groups.#:                           <computed>
source_dest_check:                           "true"
subnet_id:                                   "${element(var.subnets, count.index)}"
tags.%:                                      "2"
tags.Environment:                            "production"
tags.Name:                                   "app01"
tenancy:                                     <computed>
volume_tags.%:                               <computed>

+ module.ec2.aws_instance.mod[1]
id:                                          <computed>
ami:                                         "ami-55ef662f"
associate_public_ip_address:                 "true"
availability_zone:                           <computed>
ebs_block_device.#:                          <computed>
ebs_optimized:                               "false"
ephemeral_block_device.#:                    <computed>
instance_state:                              <computed>
instance_type:                               "t2.small"
ipv6_address_count:                          <computed>
ipv6_addresses.#:                            <computed>
key_name:                                    "ec2-key"
network_interface.#:                         <computed>
network_interface_id:                        <computed>
placement_group:                             <computed>
primary_network_interface_id:                <computed>
private_dns:                                 <computed>
private_ip:                                  <computed>
public_dns:                                  <computed>
public_ip:                                   <computed>
root_block_device.#:                         "1"
root_block_device.0.delete_on_termination:   "true"
root_block_device.0.volume_size:             "8"
root_block_device.0.volume_type:             "gp2"
security_groups.#:                           <computed>
source_dest_check:                           "true"
subnet_id:                                   "${element(var.subnets, count.index)}"
tags.%:                                      "2"
tags.Environment:                            "production"
tags.Name:                                   "app02"
tenancy:                                     <computed>
volume_tags.%:                               <computed>

+ module.memcached.aws_elasticache_cluster.mod
id:                                          <computed>
apply_immediately:                           <computed>
availability_zone:                           <computed>
az_mode:                                     <computed>
cache_nodes.#:                               <computed>
cluster_address:                             <computed>
cluster_id:                                  "memcached-production"
configuration_endpoint:                      <computed>
engine:                                      "memcached"
engine_version:                              "3.2.10"
maintenance_window:                          <computed>
node_type:                                   "cache.t2.micro"
num_cache_nodes:                             "1"
parameter_group_name:                        "memcached-production-params"
port:                                        "11211"
replication_group_id:                        <computed>
security_group_ids.#:                        <computed>
security_group_names.#:                      <computed>
snapshot_window:                             <computed>
subnet_group_name:                           "memcached-production-memcached-subnet"
tags.%:                                      "2"
tags.Description:                            "memcached production memcached instance"
tags.Environment:                            "production"

+ module.memcached.aws_elasticache_parameter_group.mod
id:                                          <computed>
description:                                 "memcached production env memcached cluster param group"
family:                                      "memcached3.2"
name:                                        "memcached-production-params"

+ module.memcached.aws_elasticache_subnet_group.mod
id:                                          <computed>
description:                                 "memcached-production-memcached-subnet"
name:                                        "memcached-production-memcached-subnet"
subnet_ids.#:                                <computed>

+ module.memcached.aws_security_group.sg_for_access_by_sgs
id:                                          <computed>
description:                                 "production to memcached"
egress.#:                                    <computed>
ingress.#:                                   <computed>
name:                                        "production-memcached"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "production-memcached"
vpc_id:                                      "${var.vpc_id}"

+ module.memcached.aws_security_group.sg_on_elasticache_instance
id:                                          <computed>
description:                                 "memcached to production"
egress.#:                                    "1"
egress.482069346.cidr_blocks.#:              "1"
egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
egress.482069346.description:                ""
egress.482069346.from_port:                  "0"
egress.482069346.ipv6_cidr_blocks.#:         "0"
egress.482069346.prefix_list_ids.#:          "0"
egress.482069346.protocol:                   "-1"
egress.482069346.security_groups.#:          "0"
egress.482069346.self:                       "false"
egress.482069346.to_port:                    "0"
ingress.#:                                   "1"
ingress.~1333864030.cidr_blocks.#:           "0"
ingress.~1333864030.description:             ""
ingress.~1333864030.from_port:               "11211"
ingress.~1333864030.ipv6_cidr_blocks.#:      "0"
ingress.~1333864030.protocol:                "tcp"
ingress.~1333864030.security_groups.#:       <computed>
ingress.~1333864030.self:                    "false"
ingress.~1333864030.to_port:                 "11211"
name:                                        "memcached-production"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "memcached-production"
vpc_id:                                      "${var.vpc_id}"

+ module.mysql.aws_db_instance.mod
id:                                          <computed>
address:                                     <computed>
allocated_storage:                           "5"
allow_major_version_upgrade:                 "true"
apply_immediately:                           "true"
arn:                                         <computed>
auto_minor_version_upgrade:                  "true"
availability_zone:                           <computed>
backup_retention_period:                     "7"
backup_window:                               <computed>
ca_cert_identifier:                          <computed>
character_set_name:                          <computed>
copy_tags_to_snapshot:                       "false"
db_subnet_group_name:                        "test-mysql-production-mysql-sg"
endpoint:                                    <computed>
engine:                                      "mysql"
engine_version:                              "5.7"
final_snapshot_identifier:                   "test-mysql-production-mysql-final-snapshot"
hosted_zone_id:                              <computed>
identifier:                                  "test-mysql-production-mysql"
identifier_prefix:                           <computed>
instance_class:                              "db.t2.medium"
kms_key_id:                                  <computed>
license_model:                               <computed>
maintenance_window:                          <computed>
monitoring_interval:                         "0"
monitoring_role_arn:                         <computed>
multi_az:                                    "true"
name:                                        <computed>
option_group_name:                           "test-mysql-production-mysql57"
parameter_group_name:                        "test-mysql-production-mysql57"
password:                                    <sensitive>
port:                                        <computed>
publicly_accessible:                         "true"
replicas.#:                                  <computed>
resource_id:                                 <computed>
skip_final_snapshot:                         "false"
status:                                      <computed>
storage_type:                                "gp2"
timezone:                                    <computed>
username:                                    "test-mysqladmin"
vpc_security_group_ids.#:                    <computed>

+ module.mysql.aws_db_option_group.mod
id:                                          <computed>
arn:                                         <computed>
engine_name:                                 "mysql"
major_engine_version:                        "5.7"
name:                                        "test-mysql-production-mysql57"
name_prefix:                                 <computed>
option_group_description:                    "Managed by Terraform"

+ module.mysql.aws_db_parameter_group.mod
id:                                          <computed>
arn:                                         <computed>
description:                                 "mysql5.7 parameter group for test-mysql production"
family:                                      "mysql5.7"
name:                                        "test-mysql-production-mysql57"
name_prefix:                                 <computed>

+ module.mysql.aws_db_subnet_group.mod
id:                                          <computed>
arn:                                         <computed>
description:                                 "test-mysql production db mysql subnet group"
name:                                        "test-mysql-production-mysql-sg"
name_prefix:                                 <computed>
subnet_ids.#:                                <computed>

+ module.mysql.aws_security_group.sg_for_access_by_sgs
id:                                          <computed>
description:                                 "test-mysql_production-rds-mysql"
egress.#:                                    <computed>
ingress.#:                                   <computed>
name:                                        "test-mysql_production-rds-mysql"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "test-mysql_production-rds-mysql"
vpc_id:                                      "${var.vpc_id}"

+ module.mysql.aws_security_group.sg_on_rds_instance
id:                                          <computed>
description:                                 "rds-test-mysql_production-mysql"
egress.#:                                    "1"
egress.482069346.cidr_blocks.#:              "1"
egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
egress.482069346.description:                ""
egress.482069346.from_port:                  "0"
egress.482069346.ipv6_cidr_blocks.#:         "0"
egress.482069346.prefix_list_ids.#:          "0"
egress.482069346.protocol:                   "-1"
egress.482069346.security_groups.#:          "0"
egress.482069346.self:                       "false"
egress.482069346.to_port:                    "0"
ingress.#:                                   "1"
ingress.~471043921.cidr_blocks.#:            "0"
ingress.~471043921.description:              ""
ingress.~471043921.from_port:                "3306"
ingress.~471043921.ipv6_cidr_blocks.#:       "0"
ingress.~471043921.protocol:                 "tcp"
ingress.~471043921.security_groups.#:        <computed>
ingress.~471043921.self:                     "false"
ingress.~471043921.to_port:                  "3306"
name:                                        "rds-test-mysql_production-mysql"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "rds-test-mysql_production-mysql"
vpc_id:                                      "${var.vpc_id}"

+ module.postgres.aws_db_instance.mod
id:                                          <computed>
address:                                     <computed>
allocated_storage:                           "5"
allow_major_version_upgrade:                 "true"
apply_immediately:                           "true"
arn:                                         <computed>
auto_minor_version_upgrade:                  "true"
availability_zone:                           <computed>
backup_retention_period:                     "7"
backup_window:                               <computed>
ca_cert_identifier:                          <computed>
character_set_name:                          <computed>
copy_tags_to_snapshot:                       "false"
db_subnet_group_name:                        "test-postgres-production-pg-sg"
endpoint:                                    <computed>
engine:                                      "postgres"
engine_version:                              "9.6"
final_snapshot_identifier:                   "test-postgres-production-postgres-final-snapshot"
hosted_zone_id:                              <computed>
identifier:                                  "test-postgres-production-postgres"
identifier_prefix:                           <computed>
instance_class:                              "db.t2.medium"
kms_key_id:                                  <computed>
license_model:                               <computed>
maintenance_window:                          <computed>
monitoring_interval:                         "0"
monitoring_role_arn:                         <computed>
multi_az:                                    "true"
name:                                        <computed>
option_group_name:                           <computed>
parameter_group_name:                        "test-postgres-production-pg96"
password:                                    <sensitive>
port:                                        <computed>
publicly_accessible:                         "true"
replicas.#:                                  <computed>
resource_id:                                 <computed>
skip_final_snapshot:                         "false"
status:                                      <computed>
storage_type:                                "gp2"
timezone:                                    <computed>
username:                                    "test-postgresadmin"
vpc_security_group_ids.#:                    <computed>

+ module.postgres.aws_db_parameter_group.mod
id:                                          <computed>
arn:                                         <computed>
description:                                 "postgres9.6 parameter group for test-postgres production"
family:                                      "postgres9.6"
name:                                        "test-postgres-production-pg96"
name_prefix:                                 <computed>

+ module.postgres.aws_db_subnet_group.mod
id:                                          <computed>
arn:                                         <computed>
description:                                 "test-postgres production db postgres subnet group"
name:                                        "test-postgres-production-pg-sg"
name_prefix:                                 <computed>
subnet_ids.#:                                <computed>

+ module.postgres.aws_security_group.sg_for_access_by_sgs
id:                                          <computed>
description:                                 "test-postgres_production-rds-pg"
egress.#:                                    <computed>
ingress.#:                                   <computed>
name:                                        "test-postgres_production-rds-pg"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "test-postgres_production-rds-pg"
vpc_id:                                      "${var.vpc_id}"

+ module.postgres.aws_security_group.sg_on_rds_instance
id:                                          <computed>
description:                                 "rds-test-postgres_production-pg"
egress.#:                                    "1"
egress.482069346.cidr_blocks.#:              "1"
egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
egress.482069346.description:                ""
egress.482069346.from_port:                  "0"
egress.482069346.ipv6_cidr_blocks.#:         "0"
egress.482069346.prefix_list_ids.#:          "0"
egress.482069346.protocol:                   "-1"
egress.482069346.security_groups.#:          "0"
egress.482069346.self:                       "false"
egress.482069346.to_port:                    "0"
ingress.#:                                   "1"
ingress.~2994424545.cidr_blocks.#:           "0"
ingress.~2994424545.description:             ""
ingress.~2994424545.from_port:               "5432"
ingress.~2994424545.ipv6_cidr_blocks.#:      "0"
ingress.~2994424545.protocol:                "tcp"
ingress.~2994424545.security_groups.#:       <computed>
ingress.~2994424545.self:                    "false"
ingress.~2994424545.to_port:                 "5432"
name:                                        "rds-test-postgres_production-pg"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "rds-test-postgres_production-pg"
vpc_id:                                      "${var.vpc_id}"

+ module.redis.aws_elasticache_cluster.mod
id:                                          <computed>
apply_immediately:                           <computed>
availability_zone:                           <computed>
az_mode:                                     <computed>
cache_nodes.#:                               <computed>
cluster_address:                             <computed>
cluster_id:                                  "redis-production"
configuration_endpoint:                      <computed>
engine:                                      "redis"
engine_version:                              "3.2.4"
maintenance_window:                          <computed>
node_type:                                   "cache.t2.micro"
num_cache_nodes:                             "1"
parameter_group_name:                        "redis-production-params"
port:                                        "6379"
replication_group_id:                        <computed>
security_group_ids.#:                        <computed>
security_group_names.#:                      <computed>
snapshot_window:                             <computed>
subnet_group_name:                           "redis-production-redis-subnet"
tags.%:                                      "2"
tags.Description:                            "redis production redis instance"
tags.Environment:                            "production"

+ module.redis.aws_elasticache_parameter_group.mod
id:                                          <computed>
description:                                 "redis production env redis cluster param group"
family:                                      "redis3.2"
name:                                        "redis-production-params"

+ module.redis.aws_elasticache_subnet_group.mod
id:                                          <computed>
description:                                 "redis-production-redis-subnet"
name:                                        "redis-production-redis-subnet"
subnet_ids.#:                                <computed>

+ module.redis.aws_security_group.sg_for_access_by_sgs
id:                                          <computed>
description:                                 "production to redis"
egress.#:                                    <computed>
ingress.#:                                   <computed>
name:                                        "production-redis"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "production-redis"
vpc_id:                                      "${var.vpc_id}"

+ module.redis.aws_security_group.sg_on_elasticache_instance
id:                                          <computed>
description:                                 "redis to production"
egress.#:                                    "1"
egress.482069346.cidr_blocks.#:              "1"
egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
egress.482069346.description:                ""
egress.482069346.from_port:                  "0"
egress.482069346.ipv6_cidr_blocks.#:         "0"
egress.482069346.prefix_list_ids.#:          "0"
egress.482069346.protocol:                   "-1"
egress.482069346.security_groups.#:          "0"
egress.482069346.self:                       "false"
egress.482069346.to_port:                    "0"
ingress.#:                                   "1"
ingress.~743784797.cidr_blocks.#:            "0"
ingress.~743784797.description:              ""
ingress.~743784797.from_port:                "6379"
ingress.~743784797.ipv6_cidr_blocks.#:       "0"
ingress.~743784797.protocol:                 "tcp"
ingress.~743784797.security_groups.#:        <computed>
ingress.~743784797.self:                     "false"
ingress.~743784797.to_port:                  "6379"
name:                                        "redis-production"
owner_id:                                    <computed>
revoke_rules_on_delete:                      "false"
tags.%:                                      "1"
tags.Name:                                   "redis-production"
vpc_id:                                      "${var.vpc_id}"

~ module.subnets.data.aws_vpc.current
id:                                          "" => "${var.vpc_id}"
cidr_block:                                  "" => <computed>
default:                                     "" => <computed>
dhcp_options_id:                             "" => <computed>
enable_dns_hostnames:                        "" => <computed>
enable_dns_support:                          "" => <computed>
instance_tenancy:                            "" => <computed>
ipv6_association_id:                         "" => <computed>
ipv6_cidr_block:                             "" => <computed>
state:                                       "" => <computed>
tags.%:                                      "" => <computed>

+ module.subnets.aws_route_table.mod_private
id:                                          <computed>
propagating_vgws.#:                          <computed>
route.#:                                     <computed>
tags.%:                                      "1"
tags.Name:                                   "subnets-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_route_table.mod_public
id:                                          <computed>
propagating_vgws.#:                          <computed>
route.#:                                     "1"
route.~3983625677.cidr_block:                "0.0.0.0/0"
route.~3983625677.egress_only_gateway_id:    ""
route.~3983625677.gateway_id:                "${var.internet_gateway_id}"
route.~3983625677.instance_id:               ""
route.~3983625677.ipv6_cidr_block:           ""
route.~3983625677.nat_gateway_id:            ""
route.~3983625677.network_interface_id:      ""
route.~3983625677.vpc_peering_connection_id: ""
tags.%:                                      "1"
tags.Name:                                   "subnets-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_route_table_association.mod_private[0]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_private[1]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_private[2]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_private[3]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_private[4]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_private[5]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_public[0]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_public[1]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_public[2]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_public[3]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_public[4]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets.aws_route_table_association.mod_public[5]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets.aws_subnet.mod_private[0]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1a"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1a-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_private[1]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1b"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1b-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_private[2]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1c"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1c-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_private[3]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1d"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1d-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_private[4]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1e"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1e-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_private[5]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1f"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1f-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_public[0]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1a"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1a-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_public[1]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1b"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1b-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_public[2]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1c"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1c-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_public[3]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1d"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1d-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_public[4]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1e"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1e-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets.aws_subnet.mod_public[5]
id:                                          <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1f"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets-us-east-1f-public"
vpc_id:                                      "${var.vpc_id}"

+ module.vpc.aws_internet_gateway.mod
id:                                          <computed>
tags.%:                                      "1"
tags.Name:                                   "vpc"
vpc_id:                                      "${aws_vpc.mod.id}"

+ module.vpc.aws_vpc.mod
id:                                          <computed>
assign_generated_ipv6_cidr_block:            "false"
cidr_block:                                  "10.0.0.0/16"
default_network_acl_id:                      <computed>
default_route_table_id:                      <computed>
default_security_group_id:                   <computed>
dhcp_options_id:                             <computed>
enable_classiclink:                          <computed>
enable_classiclink_dns_support:              <computed>
enable_dns_hostnames:                        "true"
enable_dns_support:                          "true"
instance_tenancy:                            <computed>
ipv6_association_id:                         <computed>
ipv6_cidr_block:                             <computed>
main_route_table_id:                         <computed>
tags.%:                                      "1"
tags.Name:                                   "vpc"
Plan: 51 to add, 1 to change, 0 to destroy.

