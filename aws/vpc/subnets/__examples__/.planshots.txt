

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
+ create
~ update in-place

Terraform will perform the following actions:

~ module.subnets_test1.data.aws_vpc.current
id:                                          "" => "${var.vpc_id}"
arn:                                         "" => <computed>
cidr_block:                                  "" => <computed>
cidr_block_associations.#:                   "" => <computed>
default:                                     "" => <computed>
dhcp_options_id:                             "" => <computed>
enable_dns_hostnames:                        "" => <computed>
enable_dns_support:                          "" => <computed>
instance_tenancy:                            "" => <computed>
ipv6_association_id:                         "" => <computed>
ipv6_cidr_block:                             "" => <computed>
state:                                       "" => <computed>
tags.%:                                      "" => <computed>

+ module.subnets_test1.aws_route_table.mod_private
id:                                          <computed>
propagating_vgws.#:                          <computed>
route.#:                                     <computed>
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_route_table.mod_public
id:                                          <computed>
propagating_vgws.#:                          <computed>
route.#:                                     "1"
route.~3983625677.cidr_block:                "0.0.0.0/0"
route.~3983625677.egress_only_gateway_id:    ""
route.~3983625677.gateway_id:                "${var.internet_gateway_id}"
route.~3983625677.instance_id:               ""
route.~3983625677.ipv6_cidr_block:           ""
route.~3983625677.nat_gateway_id:            ""
route.~3983625677.network_interface_id:      ""
route.~3983625677.vpc_peering_connection_id: ""
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_route_table_association.mod_private[0]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_private[1]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_private[2]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_private[3]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_private[4]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_private[5]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_private.id}"
subnet_id:                                   "${element(aws_subnet.mod_private.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_public[0]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_public[1]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_public[2]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_public[3]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_public[4]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets_test1.aws_route_table_association.mod_public[5]
id:                                          <computed>
route_table_id:                              "${aws_route_table.mod_public.id}"
subnet_id:                                   "${element(aws_subnet.mod_public.*.id, count.index)}"

+ module.subnets_test1.aws_subnet.mod_private[0]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1a"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1a-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_private[1]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1b"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1b-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_private[2]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1c"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1c-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_private[3]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1d"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1d-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_private[4]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1e"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1e-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_private[5]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1f"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.private_newbits, var.private_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "false"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1f-private"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_public[0]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1a"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1a-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_public[1]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1b"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1b-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_public[2]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1c"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1c-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_public[3]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1d"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1d-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_public[4]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1e"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1e-public"
vpc_id:                                      "${var.vpc_id}"

+ module.subnets_test1.aws_subnet.mod_public[5]
id:                                          <computed>
arn:                                         <computed>
assign_ipv6_address_on_creation:             "false"
availability_zone:                           "us-east-1f"
cidr_block:                                  "${cidrsubnet(data.aws_vpc.current.cidr_block, var.public_newbits, var.public_netnum_offset + element(data.template_file.az_to_netnum.*.rendered, count.index))}"
ipv6_cidr_block:                             <computed>
ipv6_cidr_block_association_id:              <computed>
map_public_ip_on_launch:                     "true"
tags.%:                                      "1"
tags.Name:                                   "subnets_test1-us-east-1f-public"
vpc_id:                                      "${var.vpc_id}"

+ module.vpc_test1.aws_internet_gateway.mod
id:                                          <computed>
tags.%:                                      "1"
tags.Name:                                   "vpc_test1"
vpc_id:                                      "${aws_vpc.mod.id}"

+ module.vpc_test1.aws_vpc.mod
id:                                          <computed>
arn:                                         <computed>
assign_generated_ipv6_cidr_block:            "false"
cidr_block:                                  "10.0.0.0/16"
default_network_acl_id:                      <computed>
default_route_table_id:                      <computed>
default_security_group_id:                   <computed>
dhcp_options_id:                             <computed>
enable_classiclink:                          <computed>
enable_classiclink_dns_support:              <computed>
enable_dns_hostnames:                        "true"
enable_dns_support:                          "true"
instance_tenancy:                            "default"
ipv6_association_id:                         <computed>
ipv6_cidr_block:                             <computed>
main_route_table_id:                         <computed>
tags.%:                                      "1"
tags.Name:                                   "vpc_test1"
Plan: 28 to add, 1 to change, 0 to destroy.

